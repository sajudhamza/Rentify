"""Create initial database schema

Revision ID: 381c38108c9d
Revises: e8fa16f911af
Create Date: 2025-10-13 00:18:09.336405

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '381c38108c9d'
down_revision: Union[str, None] = 'e8fa16f911af'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('bookings', 'status',
               existing_type=postgresql.ENUM('pending', 'confirmed', 'cancelled', 'completed', name='bookingstatus'),
               nullable=False)
    op.drop_column('bookings', 'created_at')
    op.drop_column('categories', 'description')
    op.add_column('items', sa.Column('address', sa.String(), nullable=True))
    op.add_column('items', sa.Column('city', sa.String(), nullable=True))
    op.add_column('items', sa.Column('state', sa.String(), nullable=True))
    op.add_column('items', sa.Column('zip_code', sa.String(), nullable=True))
    op.alter_column('items', 'description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('items', 'is_available',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('items', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('reviews', sa.Column('user_id', sa.Integer(), nullable=False))
    op.alter_column('reviews', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_constraint(op.f('reviews_reviewer_id_fkey'), 'reviews', type_='foreignkey')
    op.create_foreign_key(None, 'reviews', 'users', ['user_id'], ['id'])
    op.drop_column('reviews', 'reviewer_id')
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.add_column('reviews', sa.Column('reviewer_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.create_foreign_key(op.f('reviews_reviewer_id_fkey'), 'reviews', 'users', ['reviewer_id'], ['id'])
    op.alter_column('reviews', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('reviews', 'user_id')
    op.alter_column('items', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('items', 'is_available',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('items', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('items', 'zip_code')
    op.drop_column('items', 'state')
    op.drop_column('items', 'city')
    op.drop_column('items', 'address')
    op.add_column('categories', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('bookings', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.alter_column('bookings', 'status',
               existing_type=postgresql.ENUM('pending', 'confirmed', 'cancelled', 'completed', name='bookingstatus'),
               nullable=True)
    # ### end Alembic commands ###
